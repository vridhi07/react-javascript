// javascript is synchronous and single thraded language
// everything in javascript happen inside execution context

// var n=2;
// function square (num){
//     var ans = num*num;
//     return ans;
// }
// var square2 = square(n);
// var square4 = square(4);
// context of execution /global execution content  two phases   ==                    


// memory  (variable environment)      |  code component (thread of execution)
// key:value                           |  value assigned to a variable like 10 
// a: undefined                        |  function executedd and return value assigned to fn  
// fn : {}  copy of function           |  when function invoke diff execution context created
//                                     | not defined meaning that  variable not present in a code or  memory


// whenever javascript code run global object , global context ,this is created
//only global variable attached to windows

// , “context” refers to an object. Within an object, the keyword “this” refers to that object (i.e. “self”), 
// and provides an interface to the properties and methods that are members of that object. 
// When a function is executed, the keyword “this” refers to the object that the function is executed in.